{"version":3,"file":"static/js/703.842b4de4.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","pages/Movies/Movies.jsx","services/API.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Link = styled(NavLink)`\n  color: black;\n  text-decoration: none;\n`;\n\nexport const Container = styled.div`\n  max-width: 1200px;\n  padding: 20px;\n`;\n\nexport const MoviesGallegy = styled.ul`\n      display: flex;\n    gap: 30px;\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: space-evenly;\n`;\n\nexport const Img = styled.img`\nwidth: 300px;\nheight: 450px;\n`;\n\nexport const MovieItem = styled.li`\n  border: 1px solid #ccc;\n  width: 300px;\n  border-radius: 4px;\n  transition: scale 250ms linear;\n  box-shadow: 3px 2px 2px #727171;\n  list-style: none;\n  \n  &:hover {\n    scale: 1.1;\n  }\n`;\n\nexport const MovieName = styled.p`\n  font-size: 17px;\n  font-weight: 600;\n  max-height: 43px;\n  padding: 10px 15px;\n  width: inherit;\n\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport {\n  MoviesGallegy,\n  Container,\n  MovieName,\n  MovieItem,\n  Link,\n  Img,\n} from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  const poster = poster_path => {\n    if (poster_path === null) {\n      return 'https://i.pinimg.com/736x/aa/f7/05/aaf705e06726ce3881288ae4be3ac5fe.jpg';\n    }\n    return `https://image.tmdb.org/t/p/w300${poster_path}`;\n  };\n  return (\n  \n    <Container>\n      <MoviesGallegy>\n        {movies.map(\n          ({ id, original_title, original_name, name, title, poster_path }) => (\n            <MovieItem key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                <Img\n                  src={`${poster(poster_path)}`}\n                  alt={`${title || original_title || name}`}\n                />\n                <MovieName>{original_title || original_name}</MovieName>\n              </Link>\n            </MovieItem>\n          )\n        )}\n      </MoviesGallegy>\n    </Container>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 1200px;\n  padding: 0 20px;\n`;\n\nexport const Input = styled.input`\n  width: 400px;\n  margin-right: 12px;\n  padding: 8px 16px;\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  background-color: #68aaf0;\n  border: 1px solid #68aaf0;\n  padding: 8px 16px;\n  box-shadow: 3px 2px 2px #727171;\n  border-radius: 4px;\n  color: #fff;\n  transition: color 250ms linear, background-color 250ms linear;\n  &:hover {\n    color: #68aaf0;\n    background-color: #fff;\n  }\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Input, Container, Button } from './SearchBar.styled';\n// import { toast, ToastContainer } from 'react-toastify';\n\nexport const SearchBar = ({ onSubmit }) => {\n  const [movieName, setMovieName] = useState('');\n\n  const inputHandler = e => {\n    setMovieName(e.target.value.toLowerCase().trim());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (movieName === '') {\n      // toast.info('Please enter something');\n      alert('Please enter something');\n      // console.log('enter something');\n      return;\n    }\n\n    onSubmit(movieName);\n    setMovieName('');\n  };\n\n  return (\n    <Container>\n      <form onSubmit={handleSubmit}>\n        <Input value={movieName} onChange={inputHandler} />\n        <Button type=\"submit\">Search</Button>\n      </form>\n    </Container>\n  );\n};\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useEffect, useState } from 'react';\nimport { Outlet, useNavigate, useSearchParams } from 'react-router-dom';\nimport { SearchBar } from '../../components/SearchBar/SearchBar';\nimport { fetchMovieByName } from 'services/API';\n\nimport { MoviesList } from 'components/MoviesList/MoviesList';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query');\n\n  const handleFormSubmit = search => {\n    setSearchParams({ query: search });\n    setError(null);\n  };\n\n  useEffect(() => {\n    if (query === null) return;\n    async function getMovieByName() {\n      try {\n        const movieData = await fetchMovieByName(query);\n        setMovies(movieData.results);\n\n        if (movieData.results.length === 0) {\n          alert(`${query} not found`);\n          return;\n        } else {\n          navigate(`/movies/?query=${query}`);\n        }\n      } catch (error) {\n        setError(error);\n      }\n    }\n    getMovieByName();\n  }, [navigate, query]);\n\n  return (\n    <main>\n      {error && <p>Try again</p>}\n      <SearchBar onSubmit={handleFormSubmit} />\n\n      {movies && <MoviesList movies={movies} />}\n\n      <Outlet />\n    </main>\n  );\n};\nexport default Movies;\n","import axios from \"axios\";\n\nconst API_KEY = '83b00b62c3f214acdc61c0e1a41b5e59';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/'\n\nexport async function fetchTrendingMovies() {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n\n  const response = await axios.get('/trending/all/day', { params });\n  const data = response.data;\n\n  return data;\n}\n\nexport async function fetchMovieById(movieId) {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n\n  const response = await axios.get(`/movie/${movieId}`, { params });\n  const data = response.data;\n\n  return data;\n}\n\nexport async function fetchMovieByName(movieName) {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    query: movieName,\n  };\n\n  const response = await axios.get(`/search/movie`, { params });\n  const data = response.data;\n\n  return data;\n}\n\nexport async function fetchCast(movieId) {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n\n  const response = await axios.get(`/movie/${movieId}/credits`, { params });\n  const data = response.data;\n\n  return data;\n}\n\nexport async function fetchReviews(movieId) {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n\n  const response = await axios.get(`/movie/${movieId}/reviews`, { params });\n  const data = response.data;\n\n  return data;\n}\n\n// ключ 83b00b62c3f214acdc61c0e1a41b5e59\n// https://api.themoviedb.org/3/movie/550?api_key=83b00b62c3f214acdc61c0e1a41b5e59"],"names":["Link","styled","NavLink","Container","MoviesGallegy","Img","MovieItem","MovieName","MoviesList","movies","location","useLocation","poster","poster_path","map","id","original_title","original_name","name","title","to","state","from","src","alt","Input","Button","SearchBar","onSubmit","useState","movieName","setMovieName","e","preventDefault","alert","value","onChange","target","toLowerCase","trim","type","setMovies","error","setError","navigate","useNavigate","useSearchParams","searchParams","setSearchParams","query","get","useEffect","fetchMovieByName","movieData","results","length","getMovieByName","search","API_KEY","fetchTrendingMovies","params","api_key","language","axios","response","data","fetchMovieById","movieId","fetchCast","fetchReviews"],"sourceRoot":""}