{"version":3,"file":"static/js/387.32edcda8.chunk.js","mappings":"mQAEaA,EAAaC,EAAAA,GAAAA,GAAH,4CAIVC,EAAeD,EAAAA,GAAAA,EAAH,yF,kBC2BzB,EA5BgB,WACd,OAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,OARAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,qGACMC,EAAAA,EAAAA,IAAaJ,GADnB,OACXK,EADW,OAEjBN,EAAWM,EAASC,SAFH,2CAAH,qDAIhBH,GACD,GAAE,CAACH,KAGF,wBACsB,IAAnBF,EAAQS,OACPT,EAAQU,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,UAACjB,EAAD,YACE,UAACE,EAAD,sBAAuBc,MACvB,uBAAIC,MAFWF,EADP,KAOZ,sEAIP,C,8LC7BKG,EAAU,mCAGT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,+FACCC,EAAS,CACbC,QAASH,EACTI,SAAU,SAHP,SAMkBC,EAAAA,EAAAA,IAAU,oBAAqB,CAAEH,OAAAA,IANnD,cAMCT,EAND,OAOCa,EAAOb,EAASa,KAPjB,kBASEA,GATF,kEAYA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BnB,GAA9B,kFACCc,EAAS,CACbC,QAASH,EACTI,SAAU,SAHP,SAMkBC,EAAAA,EAAAA,IAAA,iBAAoBjB,GAAW,CAAEc,OAAAA,IANnD,cAMCT,EAND,OAOCa,EAAOb,EAASa,KAPjB,kBASEA,GATF,kEAYA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,kFACCP,EAAS,CACbC,QAASH,EACTI,SAAU,QACVM,MAAOD,GAJJ,SAOkBJ,EAAAA,EAAAA,IAAA,gBAA2B,CAAEH,OAAAA,IAP/C,cAOCT,EAPD,OAQCa,EAAOb,EAASa,KARjB,kBAUEA,GAVF,kEAaA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAyBvB,GAAzB,kFACCc,EAAS,CACbC,QAASH,EACTI,SAAU,SAHP,SAMkBC,EAAAA,EAAAA,IAAA,iBAAoBjB,EAApB,YAAuC,CAAEc,OAAAA,IAN3D,cAMCT,EAND,OAOCa,EAAOb,EAASa,KAPjB,kBASEA,GATF,kEAYA,SAAed,EAAtB,kC,aAAO,O,oBAAA,WAA4BJ,GAA5B,kFACCc,EAAS,CACbC,QAASH,EACTI,SAAU,SAHP,SAMkBC,EAAAA,EAAAA,IAAA,iBAAoBjB,EAApB,YAAuC,CAAEc,OAAAA,IAN3D,cAMCT,EAND,OAOCa,EAAOb,EAASa,KAPjB,kBASEA,GATF,kEAnDPD,EAAAA,EAAAA,SAAAA,QAAyB,+B","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/API.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewItem = styled.li`\n  padding: 16px 0;\n`;\n\nexport const ReviewAuthor = styled.p`\n  font-size: 18px;\n  font-weight: 600;\n  margin-bottom: 12px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ReviewItem, ReviewAuthor } from './Reviews.styled';\nimport { fetchReviews } from 'services/API';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getReviews = async () => {\n      const response = await fetchReviews(movieId);\n      setReviews(response.results);\n    };\n    getReviews();\n  }, [movieId]);\n\n  return (\n    <ul>\n      {reviews.length !== 0 ? (\n        reviews.map(({ id, author, content }) => (\n          <ReviewItem key={id}>\n            <ReviewAuthor>Author: {author}</ReviewAuthor>\n            <p>{content}</p>\n          </ReviewItem>\n        ))\n      ) : (\n        <p>We don't hawe any reviews for this movie.</p>\n      )}\n    </ul>\n  );\n};\n\nexport default Reviews;\n","import axios from \"axios\";\n\nconst API_KEY = '83b00b62c3f214acdc61c0e1a41b5e59';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/'\n\nexport async function fetchTrendingMovies() {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n\n  const response = await axios.get('/trending/all/day', { params });\n  const data = response.data;\n\n  return data;\n}\n\nexport async function fetchMovieById(movieId) {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n\n  const response = await axios.get(`/movie/${movieId}`, { params });\n  const data = response.data;\n\n  return data;\n}\n\nexport async function fetchMovieByName(movieName) {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    query: movieName,\n  };\n\n  const response = await axios.get(`/search/movie`, { params });\n  const data = response.data;\n\n  return data;\n}\n\nexport async function fetchCast(movieId) {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n\n  const response = await axios.get(`/movie/${movieId}/credits`, { params });\n  const data = response.data;\n\n  return data;\n}\n\nexport async function fetchReviews(movieId) {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n\n  const response = await axios.get(`/movie/${movieId}/reviews`, { params });\n  const data = response.data;\n\n  return data;\n}\n\n// ключ 83b00b62c3f214acdc61c0e1a41b5e59\n// https://api.themoviedb.org/3/movie/550?api_key=83b00b62c3f214acdc61c0e1a41b5e59"],"names":["ReviewItem","styled","ReviewAuthor","useState","reviews","setReviews","movieId","useParams","useEffect","getReviews","fetchReviews","response","results","length","map","id","author","content","API_KEY","fetchTrendingMovies","params","api_key","language","axios","data","fetchMovieById","fetchMovieByName","movieName","query","fetchCast"],"sourceRoot":""}