{"version":3,"file":"static/js/736.373312cb.chunk.js","mappings":"yQAEaA,EAAWC,EAAAA,GAAAA,GAAH,uGAORC,EAAWD,EAAAA,GAAAA,GAAH,6DAKRE,EAAUF,EAAAA,GAAAA,IAAH,2DAKPG,EAAWH,EAAAA,GAAAA,EAAH,mGAORI,EAAgBJ,EAAAA,GAAAA,EAAH,8E,kBCsB1B,EA3Ca,WACX,OAAwBK,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAWR,IATAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,qGACSC,EAAAA,EAAAA,GAAUJ,GADnB,OACRK,EADQ,OAGdN,EAAQM,EAASP,MAHH,2CAAH,qDAKbK,GACD,GAAE,CAACH,IAECF,EAAL,CAIA,IAAMQ,EAAS,SAAAC,GACb,OAAqB,OAAjBA,EACK,sGAEH,kCAAN,OAAyCA,EAC1C,EAED,OACE,+BACE,SAAChB,EAAD,UACmB,IAAhBO,EAAKU,OACJV,EAAKW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWL,EAAxB,EAAwBA,aAAxB,OACP,UAACd,EAAD,YACE,SAACC,EAAD,CAASmB,IAAG,UAAKP,EAAOC,IAAiBO,IAAI,UAC7C,SAACnB,EAAD,UAAWgB,KACX,UAACf,EAAD,yBAA2BgB,OAHdF,EADR,KAQT,sCArBP,CA0BF,C,8LC5CKK,EAAU,mCAGT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,+FACCC,EAAS,CACbC,QAASH,EACTI,SAAU,SAHP,SAMkBC,EAAAA,EAAAA,IAAU,sBAAuB,CAAEH,OAAAA,IANrD,cAMCZ,EAND,OAOCgB,EAAOhB,EAASgB,KAPjB,kBASEA,GATF,kEAYA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BtB,GAA9B,kFACCiB,EAAS,CACbC,QAASH,EACTI,SAAU,SAHP,SAMkBC,EAAAA,EAAAA,IAAA,iBAAoBpB,GAAW,CAAEiB,OAAAA,IANnD,cAMCZ,EAND,OAOCgB,EAAOhB,EAASgB,KAPjB,kBASEA,GATF,kEAYA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,kFACCP,EAAS,CACbC,QAASH,EACTI,SAAU,QACVM,MAAOD,GAJJ,SAOkBJ,EAAAA,EAAAA,IAAA,gBAA2B,CAAEH,OAAAA,IAP/C,cAOCZ,EAPD,OAQCgB,EAAOhB,EAASgB,KARjB,kBAUEA,GAVF,kEAaA,SAAejB,EAAtB,+CAAO,OAAP,oBAAO,WAAyBJ,GAAzB,kFACCiB,EAAS,CACbC,QAASH,EACTI,SAAU,SAHP,SAMkBC,EAAAA,EAAAA,IAAA,iBAAoBpB,EAApB,YAAuC,CAAEiB,OAAAA,IAN3D,cAMCZ,EAND,OAOCgB,EAAOhB,EAASgB,KAPjB,kBASEA,GATF,kEAYA,SAAeK,EAAtB,kC,aAAO,O,oBAAA,WAA4B1B,GAA5B,kFACCiB,EAAS,CACbC,QAASH,EACTI,SAAU,SAHP,SAMkBC,EAAAA,EAAAA,IAAA,iBAAoBpB,EAApB,YAAuC,CAAEiB,OAAAA,IAN3D,cAMCZ,EAND,OAOCgB,EAAOhB,EAASgB,KAPjB,kBASEA,GATF,kEAnDPD,EAAAA,EAAAA,SAAAA,QAAyB,+B","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/API.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  list-style: none;\n    gap: 16px;\n    flex-wrap: wrap;\n\n`;\nexport const CastItem = styled.li`\n  width: 150px;\n  height: 350px;\n\n`;\nexport const CastImg = styled.img`\n  width: 150px;\n  height: 225px;\n`;\n\nexport const CastName = styled.p`\n  font-size: 14px;\n  padding: 12px 0;\n  font-weight: 600;\n  margin: 0;\n`;\n\nexport const CastCharacter = styled.p`\n  font-size: 14px;\n  padding: 12px 0;\n  margin: 0;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { CastList, CastName, CastImg, CastCharacter, CastItem } from './Cast.styled';\nimport { fetchCast } from 'services/API';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getCast = async () => {\n      const response = await fetchCast(movieId);\n\n      setCast(response.cast);\n    };\n    getCast();\n  }, [movieId]);\n\n  if (!cast) {\n    return;\n  }\n\n  const poster = profile_path => {\n    if (profile_path === null) {\n      return 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSGeCc8t0O8PhLI5qowdE8upNe2aI9gm1Vvaw&usqp=CAU';\n    }\n    return `https://image.tmdb.org/t/p/w300${profile_path}`;\n  };\n\n  return (\n    <>\n      <CastList>\n        {cast.length !== 0 ? (\n          cast.map(({ id, name, character, profile_path }) => (\n            <CastItem key={id}>\n              <CastImg src={`${poster(profile_path)}`} alt=\"name\" />\n              <CastName>{name}</CastName>\n              <CastCharacter>Character: {character}</CastCharacter>\n            </CastItem>\n          ))\n        ) : (\n          <p>No info</p>\n        )}\n      </CastList>\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from \"axios\";\n\nconst API_KEY = '83b00b62c3f214acdc61c0e1a41b5e59';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/'\n\nexport async function fetchTrendingMovies() {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n\n  const response = await axios.get('/trending/movie/day', { params });\n  const data = response.data;\n\n  return data;\n}\n\nexport async function fetchMovieById(movieId) {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n\n  const response = await axios.get(`/movie/${movieId}`, { params });\n  const data = response.data;\n\n  return data;\n}\n\nexport async function fetchMovieByName(movieName) {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    query: movieName,\n  };\n\n  const response = await axios.get(`/search/movie`, { params });\n  const data = response.data;\n\n  return data;\n}\n\nexport async function fetchCast(movieId) {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n\n  const response = await axios.get(`/movie/${movieId}/credits`, { params });\n  const data = response.data;\n\n  return data;\n}\n\nexport async function fetchReviews(movieId) {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n\n  const response = await axios.get(`/movie/${movieId}/reviews`, { params });\n  const data = response.data;\n\n  return data;\n}\n\n// ключ 83b00b62c3f214acdc61c0e1a41b5e59\n// https://api.themoviedb.org/3/movie/550?api_key=83b00b62c3f214acdc61c0e1a41b5e59"],"names":["CastList","styled","CastItem","CastImg","CastName","CastCharacter","useState","cast","setCast","movieId","useParams","useEffect","getCast","fetchCast","response","poster","profile_path","length","map","id","name","character","src","alt","API_KEY","fetchTrendingMovies","params","api_key","language","axios","data","fetchMovieById","fetchMovieByName","movieName","query","fetchReviews"],"sourceRoot":""}